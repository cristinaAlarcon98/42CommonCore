/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   strlcpy_test.c                                     :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: cralarco <cralarco@student.42london.com>  +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/12/02 18:59:42 by cralarco          #+#    #+#             */
/*   Updated: 2024/12/02 19:02:41 by cralarco         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <bsd/string.h>
#include <stdio.h>
#define GREEN "\033[0;32m"
#define RED "\033[0;31m" 
#define RESET "\033[0m"

size_t	test_strlcpy(char *dst, char *src, size_t size);

voir	run_tests(){
    char src[4] = "SRC";
    char dst[4] = "DS";
    char srcTest[4] = "SRC";
    char dstTest[4] = "DS";
    size_t my_strlcpy, original_strlcpy;

    // Test with different sizes
    size_t sizes[] = {0,1,2,3,4,5,6,7,8,9, 10};
    for (int i = 0; i < 11; i++) {
        size_t size = sizes[i];

        // Call the helper function to get return values
        my_strlcpy = test_strlcpy(dst, src, size);
        original_strlcpy = strlcpy(dstTest, srcTest, size);

        // Print results in main
        if (my_strlcpy == original_strlcpy) {
            printf(GREEN "CORRECT return value " RESET);
            printf("my return value is %zu", my_strlcpy);
            printf(" and the expected is %zu\n", original_strlcpy);

        } else {
            printf(RED "INCORRECT return value " RESET);
            printf("My return value is %zu", my_strlcpy);
            printf(" and the expected is %zu\n", original_strlcpy);

        }
        printf("My dest pointer: %s\n", dst);
        printf("System dest: %s\n", dstTest);
    }

}

